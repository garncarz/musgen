{
  "name": "MusGen",
  "tagline": "Generating Music Compositions by a Computer",
  "body": "<img src=\"https://garncarz.github.io/musgen-haskell/song.png\" alt=\"Sample of a produced short song\" align=\"right\">\r\n<audio src=\"https://garncarz.github.io/musgen-haskell/song.ogg\" controls align=\"right\" />\r\n\r\n\r\n## Abstract\r\n\r\nThe thesis is focused on a problem of generating music by a computer, music being **random** but not very different from one created by a human, following particular **harmony rules** and not overgoing into disharmony. Basic terms from music theory are introduced, then the developed algorithm is described, both generally and in a relation to the **Haskell** implementation. The program is compared to similar software and a possible future development is suggested.\r\n\r\n## Program\r\n\r\nMusGen is a program generating random songs. User can specify some parameters of a demanded output, e.g. scale, tempo or a minimal duration in measures. The output is a song in **MIDI** format, which can be easily converted into a sheet music in PDF format. \r\n\r\n\r\n## Use\r\n\r\n### Linux\r\n\r\nHelp: `$ ./musgen -?`\r\n\r\nGenerating a song (with example parameters): `$ ./musgen -k62 -smajor -b3 -t130 -m4 -ipop`\r\n\r\nConverting MIDI into a sheet music in PDF: `$ ./midi2pdf.sh song.midi`\r\n\r\n### Windows\r\n\r\nYou need to use the command line (`cmd.exe`).\r\n\r\nHelp: `musgen -?`\r\n\r\nGenerating a song (with example parameters): `musgen -k62 -smajor -b3 -t130 -m4 -ipop`\r\n\r\n\r\n## Files\r\n\r\n[Thesis](https://garncarz.github.io/musgen-haskell/thesis.pdf)\r\n\r\n[Presentation](https://garncarz.github.io/musgen-haskell/prezentace.pdf) (only in Czech)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}