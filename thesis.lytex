\documentclass[a4paper, 11pt, titlepage]{report}

\newif \iffrench  % French?
% \frenchtrue  % oui
\newif \ifprint  % document for print?
% \printtrue  % yes

\usepackage[utf8]{inputenc}
\usepackage{verbatim}
\usepackage[center]{caption}
\usepackage{subfig}

\iffrench
\usepackage[T1]{fontenc}
\usepackage{calligra}
\renewcommand{\rmdefault}{calligra}
\renewcommand{\sfdefault}{calligra}
\renewcommand{\ttdefault}{calligra}
\def \Ondrej {Ondrej }
\def \the {le }
\def \The {Le }

\else
\def \Ondrej {Ondřej }
\def \the {the }
\def \The {The }
\fi

\usepackage[top=2cm, left=2.75cm]{geometry}
\textwidth 16cm
\textheight 23cm
\renewcommand{\baselinestretch}{1.2}

\usepackage[
  unicode,
  colorlinks,
  bookmarks,
  bookmarksnumbered
]{hyperref}

\hypersetup{
  pdftitle={MusGen},
  pdfauthor={Ondřej Garncarz},
  pdfsubject={Generating music compositions by a computer},
  pdfkeywords={}
}

\ifprint \hypersetup{colorlinks=false} \fi


\begin{document}

\title{Generating music compositions by a computer}
\author{\Ondrej Garncarz}
\date{\today}
\maketitle

\tableofcontents

\listoffigures

\chapter{Preamble}

\The creation of music is a wonderful process known to humankind for a very long time, interesting not only because of output. During history, people have become able to write music down and analyze it. Sheet music turns out to be made just of few primitives satisfying rules of music which are easy to be interpreted mathematically. Also, it can be transferred back to music by letting musicians interpret it or, in the last few decades, by letting even computers do it which is very easy to achieve.

\The goal of this thesis is to algorithmically analyse one of possible processes of \the creation of music and to show it implemented.


\chapter{Introduction to music theory}

This chapter is willing to introduce some basic terms which will be useful later in \the process of creation. Understanding of relations is connected with insight into algorithms and names are \the ones this thesis will reuse.

\section{Song}

Although a little simplifying, let's call a musical work a song.

\section{Tone}

Tones are musical sounds of which \the song is composed. They can be produced in many ways --- singed, played on a instrument or created synthetically. They don't even have to be produced, they can exist in an abstract form as sheet music's notes. They can have diverse qualities depending on their essence:

\begin{description}
\item[Pitch] is a frequency of \the sound.\footnote{Precisely said: \the fundamental frequency.}
\item[Duration] is a time of how long \the sound is lasting.
\item[Dynamics] is a strenght of \the expression, simplified a loudness.
\item[Color (timbre)] is an expression itself. Because \the tone isn't just a sound wave of \the fundamental frequency but a mixture of sound waves rooted from \the loudest --- fundamental --- one, \the expression varies on ratios of their strenghts. This is what makes different instruments sound diffrently.
\end{description}

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{c' cis' es' e'}
\caption{An example of tones of different pitches, in ascending order}
\end{figure}

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{f'4 f'2}
\caption{An example of tones of different durations}
\end{figure}

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{b'\mp b'\f}
\caption{An example of tones of different dynamics}
\end{figure}

It's important to remark that \the qualities can be approached as relative or absolute --- for \the musical use \the relative approach is much more important --- we want to know how tones are related to each other, we don't pay too much attention to a physical point of view.

In this thesis, the essential qualities are pitch and duration.

\The distance between two tones --- their pitches --- is called an interval. \The distance of 12 semitones\footnote{A semitone is \the smallest distance from \the classical point of view.} is an important one --- an octave --- defining a pitch twice as high (or low). For \the simplicity in a lot of practices, distances bigger than \the octave can be recalculated as \the value modulo 12 and those under zero --- an unison --- can be added by 12 resulting in all intervals being from \the unison to \the octave.


\section{Melody}

A melody is a sequence of tones.

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{d''4 e''8 f'' b'4.}
\caption{An example of a melody}
\end{figure}


\section{Chord}

A chord is a set of tones sounding at a moment. Sometimes a subset of a chord can be viewed as of \the same nature as \the chord.

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{<c' e' g' c''> <c' g' c''>}
\caption{An example of a chord\\followed by a chord of \the same nature but with one tone suppressed}
\end{figure}


\section{Harmony}

Harmony is a relation between notes in a chord. \The chord can be viewed as an union of a root tone and other tones which have some distance from \the root tone. Moreover, a progression of harmony sets ``a feeling'' of a song whereas a melody can be viewed as ``a particular message''.

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{<c' e' g'> <g' b' d'> <f' a' c'> <c' e' g'>}
\caption{An example of a progression of harmony}
\end{figure}


% TODO: beat, measure


\section{Scale}

Songs (or their parts) are usually based on a set of tones called a scale.

\begin{figure}[h!]
\centering
\subfloat[C major]{\lilypond[fragment, staffsize=20]{c'8 d' e' f' g' a' b' c''}}
\subfloat[E major]{\lilypond[fragment, staffsize=20]{e'8 fis' gis' a' b' cis'' dis'' e''}}
\caption{An example of two scales}
\end{figure}

A scale is based on its key tone --- that's \the one \the scale is named after --- and intervals of included tones in relation to \the key tone --- that's what \the second part of scale's name stands for. Scales this thesis aims at and which are also \the most frequently used in Western music are called \the major scale and \the minor scale\footnote{There are more minor scales, this thesis aims at \the natural one.}.

\begin{figure}[h!]
\centering
\subfloat[C major]{\lilypond[fragment, staffsize=20]{c'8 d' e' f' g' a' b' c''}}
\subfloat[C minor]{\lilypond[fragment, staffsize=20]{c'8 d' es' f' g' as' b' c''}}
\caption{An example of scales based on C but differing in intervals}
\end{figure}


\section{Diatonic function}

A diatonic function (or a harmonic function) defines a relation between a chord and a scale. Let's consider a C major scale as a referential scale in examples.

\subsection{Tonic chord}

\The tonic chord commonly begins and ends a song and defines its scale. It's a chord perceived as a tranquillity. \The root tone is \the key tone of \the scale (C), other tones are \the third and \the fifth of \the scale (E and G).

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{<c' e' g' c''>}
\caption{A tonic chord}
\end{figure}

\subsection{Dominant chord}

\The dominant chord is a thrilling chord which is usually resolved (followed) by \the tonic one. \The root tone is \the fifth tone of \the scale (G), other tones are \the last and \the second of \the scale (B and D).

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{<g' b' d''> <e' g' c''>}
\caption{A dominant chord, resolved in a tonic one}
\end{figure}

A tone of particular interest is \the leading tone, \the last tone of \the scale (H) --- due to \the strict harmony theory it must be resolved and \the right resolution is into \the first higher tone of \the scale --- thus \the first tone of \the scale (C).

\subsection{Subdominant chord}

\The subdominant chord is somewhere between \the tonic and \the dominant. It can be viewed as a preparation for a dominant chord with a medium amount of thrill. \The root tone is \the fourth tone of \the scale (F), other tones are \the sixth and \the first of \the scale (A and C).

\begin{figure}[h!]
\centering
\lilypond[fragment, staffsize=20]{<f' a' c''> <g' b' d''> <e' g' c''>}
\caption{A subdominant chord, followed by a dominant one resolved in a tonic one}
\end{figure}


\chapter{One of possible processes of \the creation of music}

Taking harmony and its progression as a basis in our process can lead us to a very straightforward approach.


\chapter{Implementation}


\section{Input}

\The generator program takes as input these parameters which \the generated song should fulfill:

\begin{itemize}
\item Key of harmony, given as tone's MIDI number.
\item Scale's intervals of harmony. There are two options: major and minor\footnote{Meant \the natural minor.}.
\item Beats per measure, given as an integer.
\item Tempo of \the song, given as a count of quarter notes per minute.
\item Minimal duration of \the song, given as a minimal count of measures.
\item Interpretation style of \the song. Possible options are: church, pop and rock.
\end{itemize}

User can also specify song's name and make \the program generate a new flow, otherwise an old one will be used if exists. Given a parameter \verb=-?= \the program prints help, as captured in Appendix \ref{exemplary-use}.


\section{Output}

\The program execution can be seen as having two phases where each produces output. \The first one's product is a file reflecting generated harmony flow. Its name is song's name appended by \the suffix \verb=.flow=. An example of \the file containing harmony flow of a short song is depicted in Appendix \ref{example-flow}. \The second phase's product is a MIDI file containing a particular interpretation of harmony flow. \The first file can be reused in next run of program, resulting in a MIDI output with other interpretation.

There is also a script named \textsc{midi2pdf.sh} which given \the generated song's filename produces a PDF file containing sheet music based on \the input file, as depicted in Appendix \ref{example-lily}.


\section{Environment}

\The generator program is written in \textsc{Haskell} using two extra packages for processing MIDI data and command line arguments, named \textsc{HCodecs} and \textsc{CmdArgs}. \The program can be run with \textsc{GHC}\footnote{\url{http://www.haskell.org/ghc/}}, \the packages can be installed with \textsc{Cabal}\footnote{\url{http://www.haskell.org/cabal/}}.

\The process of building source codes into a runnable binary can be initiated by calling program \textsc{make}\footnote{\url{http://www.gnu.org/software/make/}} with no arguments.

Script \textsc{midi2pdf.sh} is written in \textsc{BASH}\footnote{\url{http://www.gnu.org/software/bash/}} and uses \textsc{LilyPond}\footnote{\url{http://lilypond.org/}}.

See Appendix \ref{exemplary-use} for an exemplary use of \the program.


\section{Main program and helpers}

\textsc{Main.hs}:

\begin{description}
\item[Input]
\item[use]
\item[checkArg]
\item[main]
\end{description}

\subsection{Types}

\textsc{Types.hs}:

\begin{description}
\item[Tone]
\item[Interval]
\item[Intervals]
\item[Volume]
\item[Duration]
\item[Chord]
\item[remain]
\item[showBrief]
\item[Flow]
\item[ChanceType]
\item[MidiEvent]
\item[MidiTrack]
\item[TracksDefs]
\item[RndGen]
\item[floatMin]
\item[floatZero]
\item[floatHalf]
\end{description}

\subsection{Random generator}

\textsc{MGRandom.hs}:

\begin{description}
\item[rndDuration]
\item[rndTonesCount]
\item[rndTones]
\item[rndChordTones]
\item[rndIntervals]
\item[rndNormal]
\item[rndSplitL]
\item[testRndNormal]
\end{description}


\section{Harmony flow}

\textsc{Flow.hs}:

\begin{description}
\item[loadFlow]
\item[produceFlow]
\item[nextFlow]
\item[nextTonesChord]
\item[nextDurChord]
\item[canBeEnd]
\item[realPast]
\end{description}

\subsection{Relations}

\textsc{Relations.hs}:

\begin{description}
\item[scaleSize]
\item[major]
\item[minor]
\item[chordIntervals]
\item[majorTriad]
\item[minorTriad]
\item[diminishedTriad]
\item[augmentedTriad]
\item[toneJumpFrom]
\item[intervalFromTo]
\item[intervalAt]
\item[succToneIn]
\item[predToneIn]
\item[isFromScale]
\item[areFromScale]
\item[fitsIntervalsFrom]
\item[fitsIntervals]
\item[hasRoot]
\item[isTriad]
\item[isFullTriad]
\item[isTonicTriadIn]
\item[isSubdominantIn]
\item[isDominantIn]
\item[isLeadingToneIn]
\item[isLeadingToneOkIn]
\item[isCounterpoint]
\item[isSopranoMoving]
\item[isBassMoving]
\item[percentageMoving]
\item[isConsonantIn]
\end{description}

\subsection{Chances for harmony}

\textsc{ChanceHarmony.hs}:

\begin{description}
\item[harmonyChance]
\item[chances]
\item[chanceThick]
\item[chanceJumps]
\item[chanceInScale]
\item[chanceTriad]
\item[chanceTonicStart]
\item[chanceNotDomThenSub]
\item[chanceLeadingTone]
\item[chanceNotEmpty]
\item[chance4Tones]
\item[chanceCounterpoint]
\item[chanceMove]
\item[chanceConsonance]
\item[chanceAntiRepetition]
\item[chanceAntiRepetitionForSoprano]
\end{description}

\subsection{Chances for rhythm}

\textsc{ChanceHarmonyRhythm.hs}:

\begin{description}
\item[harmonyRhythmChance]
\item[chances]
\item[chanceMeasureTime]
\item[chanceBeatTime]
\item[chanceCopyRhythm]
\end{description}


\section{Interpretation}

\textsc{Interpretation.hs}:

\begin{description}
\item[interpretations]
\item[churchTracks]
\item[popTracks]
\item[rockTracks]
\item[harmonyTrack]
\item[sopranoTrack]
\item[harmonyRhythmTrack]
\item[harmonyRhythmTrackRock]
\item[additionTrack]
\item[bassTrack]
\end{description}

\subsection{Techniques used in interpretation}

\The interpretation techniques are implemented by functions contained in \the file \textsc{InterpretationTechniques.hs}.

There's an auxiliary function named \textbf{octaveShift} which is a function of an integer and a musical flow, defining a flow made of \the input flow transposed by \the integer count of octaves.

Other functions are standardized to \the form of a function of an random generator and a musical flow, defining a musical flow. Sometimes \the random generator can be unused if not needed. These are \the functions and how they define \the output flow:

\begin{description}
\item[sopranoFlow] defines \the flow made of \the soprano part\footnote{\The highest tones.} of \the input flow.
\item[randomMelodyFlow] defines \the flow made of \the input flow where just one tone is randomly picked from each chord.
\item[fingeredFlow] defines \the flow made of \the input flow where each chord is arranged to a sequence of its tones in \the form: \the first, \the third, \the second, \the third, \the second, \ldots, \the sequence meeting \the beat of \the flow.
\item[chordRhythmFlow] defines \the flow made of \the input flow where each chord is repeated to meet \the beat of \the flow.
\item[brokenChord1\_5\_10] defines \the flow made of \the input flow where each chord is repeated in alternating forms, the first form being \the first and \the third tone of \the chord, \the second form being \the second tone transposed up by an octave; \the repetition meeting \the beat of \the flow.
\item[walkingBass] defines \the flow made of \the input flow where each chord is arranged to a sequence of tones with \the first tone being \the first tone of \the chord, others going up and down in \the scale of \the flow to approach \the first tone of \the succeeding chord or \the first tone of \the actual chord if it's \the last one; \the sequence meeting \the beat of \the flow but twice \the speed.
\end{description}


\section{MIDI}

Due to \cite{midi-wiki}, MIDI, standing for Musical Instrument Digital Interface, is a protocol of communication enabling different electronical musical instruments and computers to interchange digital messages about music being played. Moreover, there's a MIDI file format which allows us to save these data. Having \the well-defined file format we can operate with it in many ways, we'll use it as a final stage of our generated songs. Then we'll be able to play it, make sheet music of it and there's also a possibility of generated songs being just \the first step in a chain of creation of music.

We'll use a MIDI file format which is composed of MIDI tracks where each represents a specific interpretation of harmony flow for a specific intrument. A track is a list of MIDI events where each is defined by a delay since \the preceding event and a MIDI message.

\subsection{MIDI messages}

Let's have a look at some basic MIDI messages --- as defined in \the Haskell package \textsc{HCodecs}, see \cite{midi-hcodecs} --- \the generator program uses:

\begin{description}
\item[NoteOn] tells what tone on what channel should be played with what volume, zero volume means muting \the tone.
\item[KeySignature] tells how many sharps or flats a musical staff has and whether it's a major scale.
\item[TimeSignature] tells two numbers which are written at \the beginning of a musical staff, indicating a time signature.
\item[ChannelPrefix] tells what channel is meant by following messages.
\item[InstrumentName] tells a name of an instrument, just informational message.
\item[ProgramChange] tells what channel has what MIDI instrument.
\item[TempoChange] tells a new tempo in an uncommon format of \the value of microseconds per minute divided by beats per minute, see \cite{midi-tempo}.
\item[TrackEnd] tells a MIDI track ends, all tracks should end with this message.
\end{description}

\subsection{Implemented functions and monad in relation to MIDI output}

These are \the functions and \the monad contained in \the file \textsc{Midi.hs}:

\begin{description}
\item[toneMidi] is a function of a tone and a volume, defining a MIDI event that starts playing \the tone with \the volume.
\item[pauseMidi] is a function of a duration, defining a MIDI event that moves \the MIDI play forward by \the duration.
\item[flow2Midi] is a function of a musical flow, defining a list of MIDI events playing this flow. Note that each part of flow is in fact an isolated chord, so there's no way to create pervading tones in one flow. Another note: volume set for \the events is constant, set to \the MIDI maximum of 127.
\item[keySignature] is a function of a tone and a list of intervals, defining a message part of a MIDI event that represents a MIDI key signature of a scale made of \the tone as \the key and \the intervals.
\item[timeSignature] is a function of an integer, defining a MIDI event that sets \the time signature with \the integer as \the upper number, \the lower number is 4.
\item[eventsParam] is a function of a channel number, a float and a list of MIDI events, defining an altered list where every tone playing event is set to be played on \the given channel with volume being multiplied by \the float.
\item[midiTrack] is a function of a channel number, an instrument name, an instrument MIDI number, a volume, a list of MIDI events, a beginning chord stating \the scale of a track, and a tempo, defining a list of MIDI events fully covering \the track made of \the input list and adjusted to \the rest of arguments.
\item[makeTracks] is a function of a list of definitions of MIDI tracks, a musical flow, a random generator and a tempo, defining a list of MIDI tracks where each is created by an interpretation of \the flow as defined for \the track with \the use of a new random generator splited from \the input one, processed by \the function midiTrack to meet \the other arguments.
\item[midiFile] is a function of a list of MIDI tracks, defining a content of a MIDI file made of \the tracks.
\item[exportMidi] is a monad which given a filename and a content of a MIDI file exports \the content into a file with \the name.
\end{description}


\begin{thebibliography}{9}

\bibitem{midi-wiki} Musical Instrument Digital Interface. \emph{Wikipedia, the free encyclopedia} [online]. [cited 18th March 2011]. $<$\url{http://en.wikipedia.org/wiki/Musical_Instrument_Digital_Interface}$>$.

\bibitem{midi-hcodecs} Codec.Midi. [online]. [cited 18th March 2011]. $<$\url{http://hackage.haskell.org/packages/archive/HCodecs/0.2/doc/html/Codec-Midi.html}$>$.

\bibitem{midi-tempo} MIDI File Format. \emph{\The Sonic Spot} [online]. [cited 18th March 2011]. $<$\url{http://www.sonicspot.com/guide/midifiles.html}$>$.

\end{thebibliography}


\appendix

\chapter{Examples}


\section{Exemplary use of \the program}
\label{exemplary-use}

\begin{verbatim}
$ cabal install hcodecs cmdargs
$ make
mkdir tmp
ghc --make Main -outputdir tmp -o musgen -O2
[ 1 of 11] Compiling Var              ( Var.hs, tmp/Var.o )
[ 2 of 11] Compiling Types            ( Types.hs, tmp/Types.o )
[ 3 of 11] Compiling ChanceHarmonyRhythm ( ChanceHarmonyRhythm.hs, tmp/ChanceHar
monyRhythm.o )
[ 4 of 11] Compiling Relations        ( Relations.hs, tmp/Relations.o )
[ 5 of 11] Compiling ChanceHarmony    ( ChanceHarmony.hs, tmp/ChanceHarmony.o )
[ 6 of 11] Compiling MGRandom         ( MGRandom.hs, tmp/MGRandom.o )
[ 7 of 11] Compiling InterpretationTechniques ( InterpretationTechniques.hs, tmp
/InterpretationTechniques.o )
[ 8 of 11] Compiling Midi             ( Midi.hs, tmp/Midi.o )
[ 9 of 11] Compiling Interpretation   ( Interpretation.hs, tmp/Interpretation.o 
)
[10 of 11] Compiling Flow             ( Flow.hs, tmp/Flow.o )
[11 of 11] Compiling Main             ( Main.hs, tmp/Main.o )
Linking musgen ...
$ ./musgen -?
MusGen, version date: 2011-03-16

musgen [OPTIONS] [SONG_NAME]

Common flags:
  -k --key[=MIDI_TONE]         Key of harmony
  -s --scale[=major|minor]     Scale of harmony
  -b --beats[=INT]             Beats per measure
  -t --tempo[=INT]             Quarter notes per minute
  -m --minmeasures[=INT]       Minimal number of measures
  -i --interpretation[=STYLE]  Style of interpretation
  -n --new                     Generate new flow
  -? --help                    Display help message
  -V --version                 Print version information

Generates a song fulfilling given parameters, song's name is "song" by default.
Available styles of interpretation are: church, pop, rock.
Output is SONG_NAME.midi with playable MIDI data and SONG_NAME.flow with
reusable information about harmony flow.
$ ./musgen -k62 -smajor -b3 -t130 -m4 -ipop
([54,57,62,69],b0,d4,r12)
([57,61,64],b4,d6,r8)
([57,61,66],b10,d2,r2)
([55,59,62,67],b0,d2,r12)
([54,57,62,69],b2,d10,r10)
([59,62,66],b0,d2,r12)
([57,61,64,69],b2,d2,r10)
([61,64,67],b4,d2,r8)
([57,62,66,69],b6,d4,r6)
([61,64,67],b10,d2,r2)
([59,62,66,71],b0,d2,r12)
([61,66,69],b2,d2,r10)
([59,62,67,71],b4,d8,r8)
([59,62,67],b0,d10,r12)
([57,61,66,69],b10,d2,r2)
([61,64,67],b0,d10,r12)
([57,61,64,69],b10,d2,r2)
([59,62,66],b0,d12,r12)
([55,61,64,67],b0,d6,r12)
([57,62,66],b6,d6,r6)
Flow generated.
MIDI generated.
$ ./midi2pdf.sh song.midi
\end{verbatim}


\section{Example of saved harmony flow}
\label{example-flow}

This harmony flow was produced as seen in Appendix \ref{exemplary-use}.

\begin{verbatim}
Chord {tones = [54,57,62,69], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 0, dur = 4, measure = 12, beats = 3}
Chord {tones = [57,61,64], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 4, dur = 6, measure = 12, beats = 3}
Chord {tones = [57,61,66], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 10, dur = 2, measure = 12, beats = 3}
Chord {tones = [55,59,62,67], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 0, dur = 2, measure = 12, beats = 3}
Chord {tones = [54,57,62,69], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 2, dur = 10, measure = 12, beats = 3}
Chord {tones = [59,62,66], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 0, dur = 2, measure = 12, beats = 3}
Chord {tones = [57,61,64,69], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 2, dur = 2, measure = 12, beats = 3}
Chord {tones = [61,64,67], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 4, dur = 2, measure = 12, beats = 3}
Chord {tones = [57,62,66,69], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 6, dur = 4, measure = 12, beats = 3}
Chord {tones = [61,64,67], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 10, dur = 2, measure = 12, beats = 3}
Chord {tones = [59,62,66,71], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 0, dur = 2, measure = 12, beats = 3}
Chord {tones = [61,66,69], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 2, dur = 2, measure = 12, beats = 3}
Chord {tones = [59,62,67,71], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 4, dur = 8, measure = 12, beats = 3}
Chord {tones = [59,62,67], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 0, dur = 10, measure = 12, beats = 3}
Chord {tones = [57,61,66,69], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 10, dur = 2, measure = 12, beats = 3}
Chord {tones = [61,64,67], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 0, dur = 10, measure = 12, beats = 3}
Chord {tones = [57,61,64,69], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 10, dur = 2, measure = 12, beats = 3}
Chord {tones = [59,62,66], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 0, dur = 12, measure = 12, beats = 3}
Chord {tones = [55,61,64,67], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 0, dur = 6, measure = 12, beats = 3}
Chord {tones = [57,62,66], key = 62, intervals = [0,2,4,5,7,9,11],
begin = 6, dur = 6, measure = 12, beats = 3}
\end{verbatim}


\section{Example of generated song in sheet music}
\label{example-lily}

This song was produced as seen in Appendix \ref{exemplary-use}.

\begin{lilypond}
trackAchannelA =  {
  
  % [INSTRUMENT_NAME] Harmony
  

  \key d \major
  
  \time 3/4 
  
  \tempo 4 = 130 
  
}

trackAchannelB = \relative c {
  <fis a d a' >4 <a cis e >4. <a cis fis >8 <g b d g >8 <fis a d a' >8*5 
  <b d fis >8 <a cis e a >8 <cis e g >8 <a d fis a >4 <cis e g >8 
  <b d fis b >8 <cis fis a >8 <b d g b >2 |
  % 4
  <b d g >8*5 <a cis fis a >8 <cis e g >8*5 <a cis e a >8 <b d fis >2. 
  <g cis e g >4. <a d fis >4. |
  % 7
  
}

trackA = <<
  \context Voice = channelA \trackAchannelA
  \context Voice = channelB \trackAchannelB
>>


trackBchannelA =  {
  
  % [INSTRUMENT_NAME] Melody
  

  \key d \major
  
  \time 3/4 
  
  \tempo 4 = 130 
  
}

trackBchannelB = \relative c {
  a''4 e4. fis8 g a8*5 fis8 a g a4 g8 b a b2 |
  % 4
  g8*5 a8 g8*5 a8 fis2. g4. fis |
  % 7
  
}

trackB = <<
  \context Voice = channelA \trackBchannelA
  \context Voice = channelB \trackBchannelB
>>


trackCchannelA =  {
  
  % [INSTRUMENT_NAME] Bass
  

  \key d \major
  
  \time 3/4 
  
  \tempo 4 = 130 
  
}

trackCchannelB = \relative c {
  fis,,4 a e'8 a, g fis |
  % 2
  g a g a b a cis a |
  % 3
  b cis b cis b4 g' |
  % 4
  b, g' d8 a cis4 |
  % 5
  g' e8 a, b4 fis' |
  % 6
  d g,8 fis g a g fis |
  % 7
  
}

trackC = <<

  \clef "bass_8"
  
  \context Voice = channelA \trackCchannelA
  \context Voice = channelB \trackCchannelB
>>


trackDchannelA =  {
  
  % [INSTRUMENT_NAME] Rhythm
  

  \key d \major
  
  \time 3/4 
  
  \tempo 4 = 130 
  
}

trackDchannelB = \relative c {
  <fis d' >4 <a e' >4 cis'8 <a, fis' >8 <g d' >8 <fis d' >8 |
  % 2
  a'4 <fis, d' >4 <b fis' >8 <a e' >8 <cis g' >8 <a fis' >8 |
  % 3
  d' <cis, g' >8 <b fis' >8 <cis a' >8 <b g' >4 d' |
  % 4
  <b, g' >4 d' <b, g' >8 <a fis' >8 <cis g' >4 |
  % 5
  e' <cis, g' >8 <a e' >8 <b fis' >4 d' |
  % 6
  <b, fis' >4 <g e' >4 cis'8 <a, fis' >8 d'4 |
  % 7
  
}

trackD = <<
  \context Voice = channelA \trackDchannelA
  \context Voice = channelB \trackDchannelB
>>


trackEchannelA =  {
  
  % [INSTRUMENT_NAME] Addition
  

  \key d \major
  
  \time 3/4 
  
  \tempo 4 = 130 
  
}

trackEchannelB = \relative c {
  d'4 cis4. a8 d a8*5 fis'8 e cis fis4 e8 d a' d,2 |
  % 4
  b8*5 fis'8 g8*5 cis,8 b2. g'4. a, |
  % 7
  
}

trackE = <<
  \context Voice = channelA \trackEchannelA
  \context Voice = channelB \trackEchannelB
>>


\score {
  <<
    \context Staff=trackA \trackA
    \context Staff=trackB \trackB
    \context Staff=trackC \trackC
    \context Staff=trackD \trackD
    \context Staff=trackE \trackE
  >>
}
\end{lilypond}


\end{document}
